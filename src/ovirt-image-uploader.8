.\" engine-image-uploader - oVirt Engine tool for uploading the oVirt style of Open Virtualization Format images
.TH "engine-image-uploader" "8" "" "Keith Robertson" ""
.SH "NAME"
engine\-image\-uploader \- import oVirt Open Virtualization Format images
.SH "SYNOPSIS"
\fBengine\-image\-uploader\fP [options] list
.br
\fBengine\-image\-uploader\fP [options] upload [file | directory]
.SH "DESCRIPTION"
.PP
Using the \fBengine\-image\-uploader\fP command, you can list export storage domains and upload virtual machines in Open Virtualization Format (OVF) to a oVirt Engine. The tool only supports OVF files created by oVirt.
.PP
OVF data should have the following characteristics:
.IP "\fB* gzip compressed\fP"
If using an OVF archive (rather than a directory), it must be created with gzip compression.
.IP "\fB* internal layout\fP"
The OVF data should contain images and master directories that are in the following format:
.br
|\-\- images
.br
|   |\-\- <Image Group UUID>
.br
|        |\-\-\- <Image UUID (this is the disk image)>
.br
|        |\-\-\- <Image UUID (this is the disk image)>.meta
.br
|\-\- master
.br
|   |\-\-\-vms
.br
|       |\-\-\- <UUID>
.br
|             |\-\-\- <UUID>.ovf
.br
.SH "GENERAL OPTIONS"
The following are general options you can use with this command:\&
.IP "\fB\-h, \-\-help\fP"
Show the help message and exit.\&
.IP "\fB\-\-quiet\fP"
Reduce the amount of console output (default=False).\&
.IP "\fB\-\-log\-file=PATH\fP"
Path to \fBengine\-image\-uploader\fP log file (default=/var/log/ovirt\-engine/engine\-image\-uploader.log).\&
.IP "\fB\-\-config\-file=PATH\fP"
Path to the configuration file (default=/etc/ovirt\-engine/imageuploader.conf).\&
.IP "\fB\-v, \-\-verbose\fP"
Display verbose output.\&
.IP "\fB\-f, \-\-force\fP"
Replace like named files on the target file server (default=off)\&
.SH "OVIRT ENGINE CONFIGURATION OPTIONS"
Options in this group are used to gain authorization to the oVirt Engine REST API. These are available for both list and upload commands.
.IP "\fB\-u user@engine.example.com, \-\-user=user@engine.example.com\fP"
Indicates the user name to use with the oVirt Engine REST API. This should be in UPN format.\&
.IP "\fB\-\-with\-kerberos\fP"
Enables Kerberos authentication instead of the default basic authentication.\&
.IP "\fB\-r engine.example.com, \-\-engine=engine.example.com\fP"
Hostname or IP address of the oVirt Engine (default=localhost:443).\&
.IP "\fB\-\-cert\-file=PATH\fP"
Path to the CA certificate used to validate engine identity (default=/etc/pki/ovirt-engine/ca.pem).\&
.IP "\fB\-\-insecure\fP"
Do not make an attempt to verify the engine identity (default=False).\&
.SH "EXPORT STORAGE DOMAIN CONFIGURATION OPTIONS"
Options in this group specify the export storage domain to which OVF files should be uploaded.\&
.IP "\fB\-e EXPORT_STORAGE_DOMAIN, \-\-export\-domain=EXPORT_STORAGE_DOMAIN\fP"
The export storage domain to which the file(s) should be uploaded.\&
.IP "\fB\-n NFSSERVER, \-\-nfs\-server=NFSSERVER\fP"
The NFS server to which the file(s) should be uploaded.
This option is an alternative to export\-domain and should not be combined with export\-domain.
Use this when you want to upload files to a specific NFS server 
(for example, \-\-nfs\-server=example.com:/path/to/export/<uuid>)\&
.IP "\fB\-i, \-\-ovf\-id\fP"
Use this option if you do not want to update the UUID of the image. By default, the tool will generate a new UUID for the image.  This ensures that there is no conflict between the id of the incoming image and those already in oVirt Engine.\&
.IP "\fB\-d, \-\-disk\-instance\-id\fP"
Use this option if do not you want to rename the instance ID for each disk (i.e. InstanceId) in the image. By default, this tool will generate new UUIDs for disks within the image to be imported. This ensures that there are no conflicts between the disks on the imported image and those within oVirt Engine.\&
.IP "\fB\-m, \-\-mac\-address\fP"
Use this option if do not you want to remove the network components from the image that will be imported. By default, this tool will remove any network interface cards from the image to prevent conflicts with NICs on other VMs within oVirt. Once the image has been imported, simply use the oVirt engine UI to add NICs back and oVirt will ensure that there are no MAC address conflicts.\&
.IP "\fB\-N NEW_IMAGE_NAME, \-\-name=NEW_IMAGE_NAME\fP"
Supply this option if you want to rename the image.\&
.SH "CREATING AN OVF ARCHIVE"
The virtual machine uploaded to your oVirt Engine with the \fBengine\-image\-uploader\fP, must be in the form of a tar/gzip archive. The archive can be made up of files from the images/ and master/ directory of a virtual machine that was exported from oVirt. Here's the general procedure for creating such an archive:
.PP
1. From the oVirt Engine containing the virtual machine you want to export, create an empty export domain. Use an empty export domain so it is easy to see which directory contains the vm.
.PP
2. Prepare the virtual machine, then export it to the empty export domain you just created. Check the oVirt Engine manual for details on how to do this.
.PP
3. Login to the machine that contains to the export domain, find the root of the NFS share and change to the subdirectory under that mount point. (If you started with a new export domain, only one directory should be there, representing a UUID.) It should contain images/ and master/ directories.
.PP
4. Run the following tar command to create the tar/gzip ovf archive with sparse files efficient handling: \fBtar \-zScvf my.ovf images/ master/\fP
.PP
5. Anyone you give the resulting ovf file to (in this example, called my.ovf) can import it to a oVirt Engine using the \fBengine\-image\-uploader upload\fP command.
.SH "EXAMPLES"
Here is an example of how to use \fBengine\-image\-uploader\fP to list storage domains:
.PP
# \fBengine\-image\-uploader list\fP
.br
Please provide the REST API username for oVirt Engine: \fBadmin@internal\fP
.br
Please provide the REST API password for the admin@internal oVirt Engine user: \fB**********\fP
.br
Export Storage Domain Name | Datacenter  | Export Domain Status
.br
myexportdom                | Myowndc     | active
.PP
To upload an Open Virtualization Format (ovf) file, you need to enter an NFS server name (\fB\-n NFSSERVER\fP) or export domain (\fB\-e EXPORT_STORAGE_DOMAIN\fP) and the name of the .ovf file:
.PP
# \fBengine\-image\-uploader \-e myexportdom upload myrhel6.ovf\fP
.br
Please provide the REST API username for oVirt Engine: \fBadmin@internal\fP
.br
Please provide the REST API password for the admin@internal oVirt Engine user: \fB**********\fP
.PP
You can also rename the image using the \-N option:
.PP
# \fBengine\-image\-uploader \-N new_name \-e myexportdom upload myrhel6.ovf\fP
.br
Please provide the REST API username for oVirt Engine: \fBadmin@internal\fP
.br
Please provide the REST API password for the admin@internal oVirt Engine user: \fB**********\fP
.PP
.SH "CONFIGURATION FILE"
To get configuration information, \fBengine\-image\-uploader\fP refers to the \fB/etc/ovirt\-engine/imageuploader.conf\fP configuration file. To set defaults for any of the options described in this man page, uncomment the settings you want in this file. Here examples of a few lines from that file:
.PP
[ImageUploader]
.br
###  oVirt Engine Configuration:
.br
## username to use with the REST API
.br
user=joe@example.com
.br
# password to use with the REST API
.br
passwd=L1ghtNingFst1!
.br
## hostname or IP address of the oVirt Engine
.br
engine=myengine.example.com:443
.SH "RETURN VALUES"
.IP "\fB0\fP"
The program ran to completion with no errors.\&
.IP "\fB1\fP"
The program encountered a critical failure and stopped.\&
.IP "\fB2\fP"
The program did not discover any export domains.\&
.IP "\fB3\fP"
The program encounterd a problem uploading to an export domain.\&
.IP "\fB4\fP"
The program encountered a problem un\-mounting and removing the temporary directory.\&
.SH "FILES"
.nf
/etc/ovirt\-engine/imageuploader.conf
.br
/var/log/ovirt\-engine/ovirt\-image\-uploader/*.log
.fi
.SH "AUTHORS"
Keith Robertson
.nf
Chris Negus
.nf
Sandro Bonazzola
